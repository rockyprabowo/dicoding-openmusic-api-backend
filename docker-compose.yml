version: '3.9'
services:
  api:
    container_name: openmusic_api
    build:
      context: ./
      target: dev
    restart: always
    depends_on:
      - db
      - rabbitmq
      - mail
      - redis
    volumes:
      - .:/srv/app
      - uploads:/srv/app/backend/public/uploads
    ports:
      - ${PORT}:${PORT}
    environment:
      NODE_ENV: development
      HOST: ${DOCKER_SERVICE_HOST}
      PORT: ${PORT}
      PGHOST: ${PG_DOCKER_SERVICE_NAME}
      PGPORT: ${PGPORT}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      RABBITMQ_SERVER: "amqp://${RABBITMQ_DOCKER_SERVICE_NAME}"
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_MANAGEMENT_PORT: ${RABBITMQ_MANAGEMENT_PORT}
      REDIS_SERVER: ${REDIS_DOCKER_SERVICE_NAME}
      REDIS_PORT: ${REDIS_PORT}
      MAIL_HOST: ${MAIL_DOCKER_SERVICE_NAME}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_ADDRESS: ${MAIL_ADDRESS}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAILHOG_PORT: ${MAILHOG_PORT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      AWS_S3_REGION_NAME: ${AWS_S3_REGION_NAME}
  db:
    container_name: openmusic_postgresql
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - ${PGPORT:-5432}:5432
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${PGDATABASE}",
          "-U",
          "${PGUSER}"
        ]
      timeout: 45s
      interval: 10s
      retries: 10
  pgadmin:
    container_name: openmusic_pgadmin4
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 40 # Show error only
    ports:
      - ${PGADMIN_PORT:-5050}:80
    volumes:
      - pgadmin:/var/lib/pgadmin
  rabbitmq:
    container_name: openmusic_rabbitmq
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
      - ${RABBITMQ_PORT:-5672}:5672
      - ${RABBITMQ_MANAGEMENT_PORT:-15672}:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - type: bind
        source: ./__docker/etc/rabbitmq/conf.d/99-log-level-error.conf
        target: /etc/rabbitmq/conf.d/99-log-level-error.conf
        read_only: true
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 10
  mail:
    container_name: openmusic_mailhog
    image: 'mailhog/mailhog:latest'
    logging:
      driver: none
    restart: always
    ports:
      - '${MAIL_PORT:-1025}:1025'
      - '${MAILHOG_PORT:-8025}:8025'
  redis:
    container_name: openmusic_redis
    image: redis:6-alpine
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --save 120 1 --loglevel warning
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
volumes:
  uploads:
    driver: local
  db:
    driver: local
  pgadmin:
    driver: local
  rabbitmq:
    driver: local
  redis:
    driver: local
